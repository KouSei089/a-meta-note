<%= @schedule_basis.title %>
<div class="w-96 h-96">
  <canvas id="myChart"></canvas>
</div>
<div id="tasks">
  <%# <%= render "tasks/task", task: @tasks %>
  <ol class="relative border-l border-gray-200">
    <li class="mb-5 ml-6">
      <span class="flex absolute -left-3 justify-center items-center w-6 h-6 bg-grayrails-200 rounded-full ring-8 ring-natural">
          <i class="fa-solid fa-calendar text-xs text-gray-800"></i>
      </span>
      <h3 class="flex items-center mb-1 text-lg font-semibold text-gray-900 dark:text-white">
      <% @tasks.each do |task| %>
        <%= task.title %>
        <%= render 'tasks/color', task: task %>
        <%= button_to task_path(task), method: :delete, form: { data: { turbo_confirm: "本当に削除しますか" } } do %>
          <i class="fa-solid fa-trash"></i>
        <% end %>
      <% end %>
      </h3>
      <time class="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"><%= task.time_start.strftime( "%H:%M" ) %>-<%= task.time_end.strftime( "%H:%M" ) %></time>
      <p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400"><%= task.percent %>%</p>
    </li>
  </ol>
</div>
<%= form_with(model: [@schedule_basis, @task], method: :post) do |f| %>
  <div class="flex justfity-start pb-48 mt-5">
    <button type="submit" class="mr-5">
      <i class="fa-solid fa-plus text-2xl"></i>
    </button>
    <div class="relative group mx-2 z-0">
      <input type="time" name="task[time_start]" id="task_time_start" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
      <label for="task_time_start" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Start</label>
    </div>
    <div class="relative group mx-2 z-0">
      <input type="time" name="task[time_end]" id="task_time_end" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
      <label for="task_time_end" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">End</label>
    </div>
    <div class="relative z-0 group mx-2">
      <input type="text" name="task[title]" id="task_title" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
      <label for="task_title" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Title</label>
    </div>
    <div class="relative mx-2">
      <label class="text-xs text-gray-500 absolute bottom-9 scale-90">Category</label>
      <%= f.collection_select :category_name, Category.all, :name, :name, options = { include_blank: true }, class: "py-2.5 px-0 w-36 text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" %>
    </div>
    <%= f.hidden_field :schedule_basis_id, value: @schedule_basis.id %>
  </div>
<% end %>

<script>
  const labels = ["eat", "drink"]

  const data = {
    labels: labels,
    datasets: [{
      label: 'My First dataset',
      backgroundColor: ["#000000", "#999999"],
      data: [50, 50],
    }]
  };

  const config = {
  type: 'polarArea',
  data: data,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Chart.js Polar Area Chart'
      }
    }
  },
};

  const myChart = new Chart(
    document.getElementById('myChart'),
    config
  );
</script>