<div class="mt-12">
  <%= link_to schedule_path(@schedule), data: { turbo: false }  do %>
    <i class="fa-solid fa-arrow-rotate-right text-xl"></i>
  <% end %>
  <h1 class="font-bold text-2xl text-center">Analysis Feedback</h1>
  <div class="flex justify-center mt-5">
    <div class="w-80 lg:w-96 h-48 lg:h-56 ">
      <canvas id="analysisChart"></canvas>
    </div>
  </div>
  <p class="mb-5 text-center">Deviation values between planned and actual schedule are displayed.</p>
  <div class="flex flex-col lg:flex-row">
    <div class="flex flex-col">
      <div class="flex justify-start pr-96">
        <div class="flex flex-col">
          <div class="flex justify-start">
            <h1 class="font-bold text-2xl">
            <span><%= link_to :back do %>
            <i class="fa-solid fa-chevron-right pr-2"></i>
            <% end %><span>Schedule <span><%= @schedule.title %></span>
            </h1>
            <label for="my-modal"><i class="fa-solid fa-trash mt-2 ml-2"></i></label>
            <input type="checkbox" id="my-modal" class="modal-toggle">
            <div class="modal">
              <div class="modal-box relative">
                <label for="my-modal" class="btn btn-sm btn-circle absolute right-3 top-3">âœ•</label>
                <h3 class="font-bold text-lg">Congratulations random Interner user!</h3>
                <p class="py-4">You've been selected for a chance to get one year of subscription to use Wikipedia for free!</p>
                <div class="modal-action">
                  <%= button_to schedule_path(@schedule), method: :delete do %>
                    <label for="my-modal" class="btn btn-error">delete</label>
                  <% end %>
                </div>
              </div>
            </div>
          </div>
          <div class="flex justify-center mt-5">
            <div class="w-80 lg:w-96 h-80 lg:h-96 ml-4">
              <canvas id="myChart"></canvas>
            </div>
          </div>
        </div>
      </div>
      <h2 class="text-2xl my-5">Time Schedule</h2>
      <div id="tasks">
        <%= render @tasks %>
      </div>
      <%= turbo_frame_tag [@schedule, @task] do %>
        <%= form_with(model: [@schedule, @task], method: :post) do |f| %>
          <div class="flex justfity-start pb-24 lg:pb-48 mt-5">
            <button type="submit" class="mr-2 lg:mr-5">
              <i class="fa-solid fa-plus text-2xl"></i>
            </button>
            <div class="relative group mx-1 lg:mx-2 z-0">
              <input type="time" name="task[time_start]" id="task_time_start" class="block py-2.5 px-0 w-16 lg:w-full text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
              <label for="task_time_start" class="peer-focus:font-medium absolute text-xs lg:text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Start</label>
            </div>
            <div class="relative group mx-1 lg:mx-2 z-0">
              <input type="time" name="task[time_end]" id="task_time_end" class="block py-2.5 px-0 w-16 lg:w-full text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
              <label for="task_time_end" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">End</label>
            </div>
            <div class="relative z-0 group mx-2">
              <input type="text" name="task[title]" id="task_title" class="block py-2.5 px-0 w-16 lg:w-full text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
              <label for="task_title" class="peer-focus:font-medium absolute text-xs lg:text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Title</label>
            </div>
            <div class="relative mx-2">
              <label class="text-xs text-gray-500 absolute bottom-9 scale-90">Category</label>
              <%= f.collection_select :category_name, Category.all, :name, :name, options = { include_blank: true }, class: "py-2.5 px-0 w-20 lg:w-36 text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" %>
            </div>
            <%= f.hidden_field :schedule_id, value: @schedule.id %>
          </div>
        <% end %>
      <% end %>
    </div>
    <div class="flex flex-col">
      <div class="flex justify-start">
        <div class="flex flex-col">
          <div>
            <h1 class="font-bold text-2xl">
            <span><%= link_to :back do %>
            <i class="fa-solid fa-chevron-right pr-2"></i>
            <% end %></span><span>Schedule Basis</span>
            </h1>
          </div>
          <div class="flex justify-center mt-5">
            <div class="w-80 lg:w-96 h-80 lg:h-96 ml-4">
              <canvas id="basisChart"></canvas>
            </div>
          </div>
        </div>
      </div>
      <div>
        <h2 class="text-2xl my-5">Time Schedule Basis</h2>
        <div id="task_bases">
          <%= render @task_bases %>
        </div>
      </div>
      <%= turbo_frame_tag [@schedule_basis, @task_basis] do %>
        <%= form_with(model: [@schedule_basis, @task_basis], method: :post) do |f| %>
          <div class="flex justfity-start pb-24 lg:pb-48 mt-5">
            <button type="submit" class="mr-2 lg:mr-5">
              <i class="fa-solid fa-plus text-2xl"></i>
            </button>
            <div class="relative group mx-1 lg:mx-2 z-0">
              <input type="time" name="task_basis[time_start]" id="task_basis_time_start" class="block py-2.5 px-0 w-16 lg:w-full text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
              <label for="task_basis_time_start" class="peer-focus:font-medium absolute text-xs lg:text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Start</label>
            </div>
            <div class="relative group mx-1 lg:mx-2 z-0">
              <input type="time" name="task_basis[time_end]" id="task_basis_time_end" class="block py-2.5 px-0 w-16 lg:w-full text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
              <label for="task_basis_time_end" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">End</label>
            </div>
            <div class="relative z-0 group mx-2">
              <input type="text" name="task_basis[title]" id="task_basis_title" class="block py-2.5 px-0 w-16 lg:w-full text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
              <label for="task_basis_title" class="peer-focus:font-medium absolute text-xs lg:text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Title</label>
            </div>
            <div class="relative mx-2">
              <label class="text-xs text-gray-500 absolute bottom-9 scale-90">Category</label>
              <%= f.collection_select :category_name, Category.all, :name, :name, options = { include_blank: true }, class: "py-2.5 px-0 w-20 lg:w-36 text-xs lg:text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer" %>
            </div>
            <%= f.hidden_field :schedule_basis_id, value: @schedule_basis.id %>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
</div>


<script>
  const labels = gon.name_results

  const data = {
    labels: labels,
    datasets: [{
      label: 'Analysis Feedback',
      backgroundColor: gon.color_results,
      data: gon.percent_results,
    }]
  };

  const config = {
  type: 'bar',
  data: data,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      }
    }
  },
};

  const analysisChart = new Chart(
    document.getElementById('analysisChart'),
    config
  );
</script>

<script>
  const analysisLabels = gon.category_array

  const analysisData = {
    labels: analysisLabels,
    datasets: [{
      label: 'My First dataset',
      backgroundColor: gon.color_array,
      data: gon.percent_array,
    }]
  };

  const analysisConfig = {
  type: 'polarArea',
  data: analysisData,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      }
    }
  },
};

  const myChart = new Chart(
    document.getElementById('myChart'),
    analysisConfig
  );
</script>

<script>
  const basisLabels = gon.basis_category_array

  const basisData = {
    labels: basisLabels,
    datasets: [{
      label: 'My First dataset',
      backgroundColor: gon.basis_color_array,
      data: gon.basis_percent_array,
    }]
  };

  const basisConfig = {
  type: 'polarArea',
  data: basisData,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      }
    }
  },
};

  const basisChart = new Chart(
    document.getElementById('basisChart'),
    basisConfig
  );
</script>
